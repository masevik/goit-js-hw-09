{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA/CSO,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAMC,iBAWN,IATA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAErBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcL,EAAOG,MACvBG,EAAa,EACbC,EAAeN,EAEVO,EAAI,EAAGA,EAAIH,EAAaG,IAG/B3B,EAFAyB,GAAc,EAEYC,GACvBE,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBJ,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,MAAK,CAC9DD,SAAQ,YACVgC,QAAS,K,IAGZC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBJ,EAAAgC,OAAOK,QAAQ,sBAAqCH,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,MAAK,CAC7DD,SAAU,YACVgC,QAAS,K,IAIfP,GAAgBH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  const inputDelay = Number(delay.value);\n  const inputStep = Number(step.value);\n  const inputAmount = amount.value;\n  let positionId = 0;\n  let currentDelay = inputDelay;\n\n  for (let i = 0; i < inputAmount; i++) {\n    positionId += 1;\n\n    createPromise(positionId, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'right-top',\n          timeout: 10000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          position: 'right-top',\n          timeout: 10000,\n        });\n      });\n\n    currentDelay += inputStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","positionId","currentDelay","i","then","param","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.869e2f6f.js.map"}